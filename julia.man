.TH JULIA LOCAL
.SH NAME
julia \- calculate and graphically display a Julia set
.SH SYNOPSIS
.in +8n
.ti -8n
\fIjulia\fR
[-Lps][-W width][-H height][-o filename][-a 
\fIn\fR ]
[-b 
\fIn\fR ]
[-w 
\fIn\fR ]
[-h 
\fIn\fR ]
[-M 
\fIn\fR ]
[-R 
\fIp\fR ]
[-S 
\fIn\fR ]
[-T 
\fIn\fR ]
[-D 
\fIr\fR ]
[-r 
\fIn\fR ]
[-O 
\fIn\fR ]
[-c 
\fIn\fR ]
[-x x_center]
[-y y_center]
.in -8n
.SH DESCRIPTION
\fIjulia\fR
generates and graphically displays a Julia set according to the parameters
and window specified.
.SH OPTIONS
.TP 8
-D \fIn\fP
Specifies the delta within which an iterate must fall in order to be considered
as having "returned" to a previous point in periodic orbit detection. Default
value is 0.01.
.TP
-H \fIn\fP
Specifies the height of the window. Default is 512.
.TP
-M \fIn\fP
Specifies the escape detection radius. The default value is 100.
.TP
-O \fIn\fP
Specifies the minimum color index to be used for iteration counts. 
.TP
-S
Indicates to not look for a second attractor.
.TP
-T
Indicates to look for a second attractor (default action).
.TP
-W \fIn\fP
Specifies the width of the window. Default is 512.
.TP
-a \fIr\fP
Specifies the real value to use as the minimum parameter value of the 
horizontal axis. Default is -1.5.
.TP
-b \fIn\fP
Specifies the real value to use as the minimum parameter value of the 
vertical axis. Default is -1.5.
.TP
-c \fIn\fP
Selects one of twelve different color wheels to use. The default color
wheel is a rainbow palette.
.TP
-h \fIr\fP
Specifies the real value to be used as the range over which the vertical
parameter values vary. The default is 3.0.
.TP
-o \fIfilename\fP
Specifies the output filename to be used. If the -o option is given, this
file will automatically be written out at the completion of the drawing.
If it is not specified, a default filename of julia.out is used and only
written if the 'f' or 'F' keys are pressed during a run. The format of the
output file is PPM for color and PGM for monochrom. The parameters used to
calculate the picture are included as comments at the beginning of the output
file.
.TP
-p
Switches color indices for negative and positive iteration counts. Generally,
causes negative iteration counts to be displayed in more detail while darkening
and narrowing the color range for positive iteration counts. This can be toggled
during runtime by pressing the 'p' key.
.TP
-r \fIn\fP
Specifies the maximum rgb value to be used. Default is 35000.
.TP
-s \fIn\fP
Specifies the length of the color wheel spin.
.TP
-u
Produces a usage message.
.TP
-v 
Prints out the various values to be used and exits.
.TP
-w \fIr\fP
Specifies the real value to be used as the range over which the horizontal
parameter values vary. The default is 3.0.
.TP
-x \fIn\fP
Specifies the center x value of the window in the Complex plane. Default is 0.0.
.TP
-y \fIn\fP
Specifies the center y value of the window in the Complex plane. Default is 0.0.
.sp 2
.SH NOTES
.sp
During display, pressing the left mouse button allows you to select the area to
be investigated with the mouse. The upper left hand corner of the desired
area is the location of the cursor when the button is pressed. The lower
right hand corner is specified by the cursor when the button is released.
.sp 2
Use of the keys 
\fIbBeEfFkKjJmnrRsSwWxXqQ\fP
indicates:
.sp
.ti 10
(<) Halve the maximum iteration limit.
.ti 10
(>) Double the maximum iteration limit.
.ti 10
(-) Halve the escape detection radius.
.ti 10
(+) Double the escape detection radius.
.ti 10
(0) Zoom out doubling the window on the Complex plane.
.ti 10
(9) Zoom into the center quarter of the window on the Complex plane.
.ti 10
(E or e) Recalculate the indices into the color wheel using a different method
.ti 10
(F or f) Save current screen to ouput file (not yet implemented)
.ti 10
(H or h or ?) Display brief help message
.ti 10
(i) Decrement the interval between stripes for the striped color map.
.ti 10
(I) Increment the interval between stripes for the striped color map.
.ti 10
(P or p) Toggle positive/negative iteration count display.
.ti 10
(r) Redraw the window using previously calculated iteration counts.
.ti 10
(R) Redraw the window using the newly set parameter and window values.
.ti 10
(s) Spin the color wheel in one direction
.ti 10
(t) Spin the color wheel in the other direction
.ti 10
(u) Go up to the window just prior to the most recent zoom.
.ti 10
(U) Go all the way up to the original window.
.ti 10
(V or v) Display values of various parameters currently in use
.ti 10
(W or w) Use next color map.
.ti 10
(<ctrl>-W) Use color map in $HOME/.juliamap
.ti 10
(X or x) Clear window
.ti 10
(Q or q) quit
.sp 2
.SH FILES
.sp
/usr/local/lib/julia/colormaps/*	-	samples for use as $HOME/.juliamap
/usr/local/lib/julia/params/*		-	scripts with interesting parameters
.sp 2
.SH AUTHOR
.nf
        Ronald Joe Record
         rr@ronrecord.com
.fi
.sp 2
.SH ACKNOWLEDGEMENTS
.PP
Algorithms and coloring schemes were introduced to me in course work under
Heinz Otto Peitgen and Dietmar Saupe at the University of California at
Santa Cruz. Assistance with colormaps and spinning color wheels
and X was gleaned from Hiram Clawson. Rubber banding code was adapted from
an existing Mandelbrot program written by Stacey Campbell.
